# -*- coding: utf-8 -*-
"""Task 2 Prodigy.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19v5f8leIhq74aythl76x-eNA_TnzctjU

Task 2 Prodigy

By Aarya Godbole

ML Track
"""

# 1. Import libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler, LabelEncoder

# 2. Load the dataset
df = pd.read_csv("Mall_Customers.csv")

# 3. Preprocessing
df.drop(columns=["CustomerID"], inplace=True)

# Encode gender
le = LabelEncoder()
df["Gender"] = le.fit_transform(df["Gender"])  # Female=0, Male=1

# 4. Feature selection & scaling
features = ["Gender", "Age", "Annual Income (k$)", "Spending Score (1-100)"]
X = df[features]
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# 5. Choose K using elbow method
inertia = []
for k in range(1, 11):
    km = KMeans(n_clusters=k, init="k-means++", random_state=42)
    km.fit(X_scaled)
    inertia.append(km.inertia_)

plt.plot(range(1, 11), inertia, 'bo-')
plt.xlabel("Number of Clusters (K)")
plt.ylabel("Inertia (WCSS)")
plt.title("Elbow Method for Optimal K")
plt.show()

# 6. Apply K-Means
best_k = 4  # choose based on elbow plot
kmeans = KMeans(n_clusters=best_k, init="k-means++", random_state=42)
df["Cluster"] = kmeans.fit_predict(X_scaled)

# 7. Visualize clusters
sns.scatterplot(
    x="Annual Income (k$)", y="Spending Score (1-100)",
    hue="Cluster", data=df, palette="tab10", s=60)
plt.title(f"K-Means Clusters (K={best_k})")
plt.xlabel("Annual Income (k$)")
plt.ylabel("Spending Score (1-100)")
plt.legend(title="Cluster", bbox_to_anchor=(1, 1))
plt.show()

